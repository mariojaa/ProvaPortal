@using ProvaPortal.Extensions;
@using ProvaPortal.Models.Enum
@model List<ProvaModel>

<h1 class="text-center display-4">Lista de Provas</h1>

@if (TempData["MensagemSucesso"] != null)
{
    <div class="alert alert-success mensagem-temporaria" role="alert">
        @TempData["MensagemSucesso"]
    </div>
}

@if (TempData["MensagemErro"] != null)
{
    <div class="alert alert-danger mensagem-temporaria" role="alert">
        @TempData["MensagemErro"]
    </div>
}

<button id="btnImprimir" class="btn btn-primary" disabled>Imprimir</button>
<ul class="nav nav-tabs" id="myTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <a class="nav-link active" id="provas-tab" data-toggle="tab" href="#provas" role="tab" aria-controls="provas" aria-selected="true">Provas Recebidas</a>
    </li>
    <li class="nav-item" role="presentation">
        <a class="nav-link" id="impressos-tab" data-toggle="tab" href="#impressos" role="tab" aria-controls="impressos" aria-selected="false">Aguardando Impressão</a>
    </li>
    <li class="nav-item" role="presentation">
        <a class="nav-link" id="deletadas-tab" data-toggle="tab" href="#deletadas" role="tab" aria-controls="deletadas" aria-selected="false">Impressas</a>
    </li>
</ul>

<div class="tab-content" id="myTabContent">
    <div class="tab-pane fade show active" id="provas" role="tabpanel" aria-labelledby="provas-tab">
        <!-- Conteúdo da aba Provas Enviadas -->
        @if (Model != null && Model.Count > 0)
        {
            <table id="table-provas" class="table table-hover">
                <!-- Cabeçalho da tabela -->
                <thead class="table-light">
                    <tr>
                        <th scope="col">Nome Arquivo</th>
                        <th scope="col">Cópias</th>
                        <th scope="col">Data do Envio</th>
                        <th scope="col">Tipo de Prova</th>
                        <th scope="col">Tipo da Avaliação</th>
                        <th scope="col">Status</th>
                        <th></th>
                    </tr>
                </thead>
                <!-- Corpo da tabela -->
                <tbody>
                    @foreach (var item in Model.Where(item => item.StatusDaProva.Equals(StatusDaProva.Enviado)))
                    {
                        <tr>
                            <td>@item.NomeArquivo</td>
                            <td>@item.NumeroCopias</td>
                            <td>@item.DataEnvio</td>
                            <td>@item.TipoDeProva</td>
                            <td>@item.TipoDaAvaliacao</td>
                            <td>@item.StatusDaProva.GetDisplayName()</td>
                            <td class="align-items-baseline">
                                @*<a href="#" class="btnDeletarAdmin" data-value="@item.Id" title="Excluir"></a>*@
                                <a href="@Url.Action("VisualizarProva", "Provas", new { id = item.Id })" target="_blank" class="btnImprimir" data-value="@item.Id" title="Imprimir"></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>

    <div class="tab-pane fade" id="impressos" role="tabpanel" aria-labelledby="impressos-tab">
        <table id="table-impressos" class="table table-hover">
            <thead class="table-light">
                <tr>
                    <th scope="col">Nome Arquivo</th>
                    <th scope="col">Cópias</th>
                    <th scope="col">Data do Envio</th>
                    <th scope="col">Tipo de Prova</th>
                    <th scope="col">Tipo da Avaliação</th>
                    <th scope="col">Status</th>
                    <th></th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model.Where(item => item.StatusDaProva.Equals(StatusDaProva.AguardandoImpressao)))
                {
                    <tr>
                        <td>@item.NomeArquivo</td>
                        <td>@item.NumeroCopias</td>
                        <td>@item.DataEnvio</td>
                        <td>@item.TipoDeProva</td>
                        <td>@item.TipoDaAvaliacao</td>
                        <td>@item.StatusDaProva.GetDisplayName()</td>
                        <td class="align-items-baseline">
                            <input type='checkbox' data-id='@item.Id' />
                            @*<a href="@Url.Action("VisualizarProva", "Provas", new { id = item.Id })" target="_blank" class="btnNotificada" data-value="@item.Id" title="Notificar"></a>*@
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="tab-pane fade" id="deletadas" role="tabpanel" aria-labelledby="deletadas-tab">
        <table id="table-deletadas" class="table table-hover">
            <thead class="table-light">
                <tr>
                    <th scope="col">Nome Arquivo</th>
                    <th scope="col">Cópias</th>
                    <th scope="col">Data do Envio</th>
                    <th scope="col">Tipo de Prova</th>
                    <th scope="col">Tipo da Avaliação</th>
                    <th scope="col">Status</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Where(item => item.StatusDaProva.Equals(StatusDaProva.Impressa)))
                {
                    <tr>
                        <td>@item.NomeArquivo</td>
                        <td>@item.NumeroCopias</td>
                        <td>@item.DataEnvio</td>
                        <td>@item.TipoDeProva</td>
                        <td>@item.TipoDaAvaliacao</td>
                        <td>@item.StatusDaProva.GetDisplayName()</td>
                        <td class="align-items-baseline">
                            
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <div id="conteudomodal"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $("tbody input[type='checkbox']").change(function () {
                var checkedCheckboxes = $("tbody input[type='checkbox']:checked");
                $("#btnImprimir").prop("disabled", checkedCheckboxes.length === 0);
            });

            $("#btnImprimir").click(function () {
                var selectedIds = [];

                $("tbody input[type='checkbox']:checked").each(function () {
                    selectedIds.push($(this).data("id"));
                });

                if (selectedIds.length > 0) {
                    // Mostrar o overlay de carregamento
                    mostrarLoading();

                    $.ajax({
                        url: "/Provas/AtualizarStatusNotificada",
                        type: "POST",
                        data: { ids: selectedIds },
                        success: function () {
                            // Redirecionar para a mesma página após a reversão do status
                            window.location.reload();
                        },
                        error: function (error) {
                            console.log(error);
                        },
                        complete: function () {
                            // Esconder o overlay de carregamento quando a solicitação estiver completa
                            ocultarLoading();
                        }
                    });
                }
            });

            // Inicialize o DataTable nas três tabelas
            var tableProvas = $('#table-provas').DataTable({
                "ordering": true,
                "paging": true,
                "searching": true,
                "pageLength": 10,
                "info": false,
                "lengthChange": false,
                "dom": 'lrtip',
                "oLanguage": {
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLoadingRecords": "Carregando...",
                    "sProcessing": "Processando...",
                    "sSearch": "Pesquisa",
                    "sZeroRecords": "Nenhum registro encontrado",
                    "oPaginate": {
                        "sNext": "Próximo",
                        "sPrevious": "Anterior",
                        "sFirst": "Primeiro",
                        "sLast": "Último"
                    },
                    "oAria": {
                        "sSortAscending": ": Ordenar colunas de forma ascendente",
                        "sSortDescending": ": Ordenar colunas de forma descendente"
                    }
                }
            });

            var tableaguardandoimpressao = $('#table-aguardandoimpressao').DataTable({
                "ordering": true,
                "paging": true,
                "searching": true,
                "pageLength": 10,
                "info": false,
                "lengthChange": false,
                "dom": 'lrtip',
                "oLanguage": {
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLoadingRecords": "Carregando...",
                    "sProcessing": "Processando...",
                    "sSearch": "Pesquisa",
                    "sZeroRecords": "Nenhum registro encontrado",
                    "oPaginate": {
                        "sNext": "Próximo",
                        "sPrevious": "Anterior",
                        "sFirst": "Primeiro",
                        "sLast": "Último"
                    },
                    "oAria": {
                        "sSortAscending": ": Ordenar colunas de forma ascendente",
                        "sSortDescending": ": Ordenar colunas de forma descendente"
                    }
                }
            });

            var tableImpressos = $('#table-impressos').DataTable({
                "ordering": true,
                "paging": true,
                "searching": true,
                "pageLength": 10,
                "info": false,
                "lengthChange": false,
                "dom": 'lrtip',
                "oLanguage": {
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLoadingRecords": "Carregando...",
                    "sProcessing": "Processando...",
                    "sSearch": "Pesquisa",
                    "sZeroRecords": "Nenhum registro encontrado",
                    "oPaginate": {
                        "sNext": "Próximo",
                        "sPrevious": "Anterior",
                        "sFirst": "Primeiro",
                        "sLast": "Último"
                    },
                    "oAria": {
                        "sSortAscending": ": Ordenar colunas de forma ascendente",
                        "sSortDescending": ": Ordenar colunas de forma descendente"
                    }
                }
            });

            var tableDeletadas = $('#table-deletadas').DataTable({
                "ordering": true,
                "paging": true,
                "searching": true,
                "pageLength": 10,
                "info": false,
                "lengthChange": false,
                "dom": 'lrtip',
                "oLanguage": {
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLoadingRecords": "Carregando...",
                    "sProcessing": "Processando...",
                    "sSearch": "Pesquisa",
                    "sZeroRecords": "Nenhum registro encontrado",
                    "oPaginate": {
                        "sNext": "Próximo",
                        "sPrevious": "Anterior",
                        "sFirst": "Primeiro",
                        "sLast": "Último"
                    },
                    "oAria": {
                        "sSortAscending": ": Ordenar colunas de forma ascendente",
                        "sSortDescending": ": Ordenar colunas de forma descendente"
                    }
                }
            });

            // Função para obter a cor com base no status
            function getStatusColor(status) {
                if (status === "Enviada") {
                    return "blue";
                } else if (status === "Aguardando Impressão") {
                    return "orange";
                } else if (status === "Prova Impressa") {
                    return "green";
                } else {
                    return "";
                }
            }

            // Atualiza a cor do texto na tabela com base no status
            $("tbody td:nth-child(6)").each(function () {
                var status = $(this).text().trim();
                var color = getStatusColor(status);
                if (color !== "") {
                    $(this).css("color", color);
                }
            });

            //evento de clique nas abas para alternar entre as tabelas
            $('#myTabs a').on('click', function (e) {
                e.preventDefault();
                $(this).tab('show');
                var targetTableId = $(this).attr("data-target-table");
                $('#' + targetTableId).DataTable().ajax.reload();
            });

            $(".mensagem-temporaria").delay(2000).fadeOut("slow");

            //$(".btnNotificada").click(function () {
            //    var id = $(this).data("value");
            //    atualizarStatus("/Provas/AtualizarStatusNotificada/" + id, "#table-provas");
            //});

            $(".btnNotificada").click(function () {
                var id = $(this).data("value");

                // Mostrar o overlay de carregamento
                mostrarLoading();

                $.ajax({
                    url: "/Provas/AtualizarStatusNotificada/" + id,
                    type: "POST",
                    success: function () {
                        // Redirecionar para a mesma página após a reversão do status
                        window.location.reload();
                    },
                    error: function (error) {
                        console.log(error);
                    },
                    complete: function () {
                        // Esconder o overlay de carregamento quando a solicitação estiver completa
                        ocultarLoading();
                    }
                });
            });

            $(".btnImprimir").click(function () {
                var id = $(this).data("value");

                // Mostrar o overlay de carregamento
                mostrarLoading();

                $.ajax({
                    url: "/Provas/AtualizarStatusAguardandoImpressao/" + id,
                    type: "POST",
                    success: function () {
                        // Redirecionar para a mesma página após a reversão do status
                        window.location.reload();
                    },
                    error: function (error) {
                        console.log(error);
                    },
                    complete: function () {
                        // Esconder o overlay de carregamento quando a solicitação estiver completa
                        ocultarLoading();
                    }
                });
            });

            function atualizarStatus(url, targetTableId) {
                $.ajax({
                    url: url,
                    type: "POST",
                    success: function (data) {
                        if (data.success) {
                            // Atualiza a tabela correspondente após a mudança de status
                            $(targetTableId).DataTable().ajax.reload();
                        } else {
                            // Trate os erros conforme necessário
                        }
                    },
                    error: function (error) {
                        // Trate os erros conforme necessário
                    }
                });
            }

            // Função para mostrar o overlay de carregamento
            function mostrarLoading() {
                $("#loadingOverlay").show();
            }

            // Função para ocultar o overlay de carregamento
            function ocultarLoading() {
                $("#loadingOverlay").hide();
            }

        });
    </script>
}
